#pragma once

#include <stdbool.h>
#include <stdint.h>

#include <vector>
#include <fstream>

static const uint64_t SEEDS[128] = {
	680559458001156, 7473214103774335, 5290219219442156,
    7209106448641576, 7381549158709472, 7828313178774587,
    6626407779913026, 3230152815484917, 1037062191559179,
    123689398160944, 4105860141553283, 4439750049463750,
    1416939398989335, 8929745533975903, 2304567102797567,
    8001038344952201, 6232956297934330,  225846849445278,
    578445224740950, 4823606692457746, 6699080134084388,
    5381064259912646, 7157756321631418, 7875187919069285,
    839506716317299, 5346740694378274, 4373494969391662,
    3789102063431672,  367534006508841, 8148189533923809,
    3690934304314872, 7624936852740661,  615346080754261,
    6456280921656725, 7399354345185903,  809557018835772,
    6512632265780696, 7078943958671779, 1050348560403495,
    3338353750127036, 3240310026443018, 3723489384893000,
    3531277172528135, 2156610820907787, 3236008163021522,
    256780047252482, 2322406915591635, 2507558100330749,
    24411967001562, 2094840086705299, 6019047435632344,
    8590043331721112, 7296197026111151, 3892565982137851,
    6680587338649727, 8573567416056326, 8280499846336800,
    3933263701715594, 50035983631812, 6492293637910530,
    2142942863679320, 3442016740830430, 6480686270792646,
    5618067244584756, 8486550354875245, 1079761229671131,
    7864196068892852, 6629515843204863, 2296877917328687,
    7270090935883649, 1820724281250149, 2788265004789929,
    1646433851679826, 4943479507483278,  523974067412833,
    8655695593713931, 6720716398725908, 5039598924486458,
    568579496142727, 7860953718334590, 4108183394039770,
    2322241895084432, 6616139001536473, 5814555122816036,
    3768213321496151, 5255656439262848,  127890202557413,
    7300981239948301, 4550660571055066, 6842478950657899,
    1539956729810848, 7244481278396510, 6079665597415005,
    3005307319734320, 5312711060150391, 2616902306217733,
    7332370489256897, 2345714764999977, 2236525640821507,
    2644559184887798, 4103499296819740, 6648043857531681,
    994765771101748, 8854501176246696, 2382329396840580,
    7620091161456577, 3994809568637933, 3715992012561504,
    4048952952653500, 3788484801332004, 3773245282174689,
    5045868695638988, 360477394297177, 8081608877669162,
    1571628881766384, 516740975326676, 5552395501319056,
    2515893022196146, 4620253747552905, 1121448558496220,
    1645363387192032, 7926925318840313, 4312546728766523,
    3652797657480648, 4546641929590491,  466138876105007,
    5732943237456050, 6096688521003220
};

typedef struct {
	std::vector<uint32_t> seeds;
	uint8_t* bits;
	size_t   num_bits;
} BloomFilter;

typedef struct {
	uint8_t** bits;
	size_t   num_bits_chunk;
	size_t   num_filters;
	size_t   num_hashes;
	size_t   num_elements_chunk;
	size_t   max_elements_chunk;
} ChunkedBloomFilter;

uint64_t fnv1a_64(uint64_t key, uint64_t seed);

void get_optimal_params(
		uint64_t num_docs,
		double fpr,
		uint64_t &num_hashes,
		uint64_t &num_bits
		);

BloomFilter init_bloom_filter(uint64_t max_entries, double fpr);
void bloom_free(BloomFilter& filter);
void bloom_put(BloomFilter& filter, const uint64_t key);
bool bloom_query(const BloomFilter& filter, const uint64_t key);
void bloom_clear(BloomFilter& filter);
void bloom_save(const BloomFilter& filter, const char* filename);
void bloom_load(BloomFilter& filter, const char* filename);
void bloom_save(const BloomFilter& filter, std::ofstream& file);
void bloom_load(BloomFilter& filter, std::ifstream& file);
uint64_t get_bloom_memory_usage(const BloomFilter& filter);

ChunkedBloomFilter init_chunked_bloom_filter(uint32_t num_elements_chunk, double fpr);
void bloom_free(ChunkedBloomFilter& filter);
void bloom_put(ChunkedBloomFilter& filter, const uint64_t key);
bool bloom_query(const ChunkedBloomFilter& filter, const uint64_t key);
void bloom_clear(ChunkedBloomFilter& filter);
void bloom_save(const ChunkedBloomFilter& filter, const char* filename);
void bloom_load(ChunkedBloomFilter& filter, const char* filename);
void bloom_save(const ChunkedBloomFilter& filter, std::ofstream& file);
void bloom_load(ChunkedBloomFilter& filter, std::ifstream& file);
uint64_t get_bloom_memory_usage(const ChunkedBloomFilter& filter);
